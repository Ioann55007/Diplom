# Generated by Django 4.2.2 on 2023-09-29 06:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('the_profile', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('part_room', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='review',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_author', to='the_profile.profile'),
        ),
        migrations.AddField(
            model_name='review',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_post', to='part_room.room'),
        ),
        migrations.AddField(
            model_name='photodetailroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_room', to='part_room.room', verbose_name='Номер в гостинице'),
        ),
        migrations.AddField(
            model_name='doubleroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_double', to='part_room.room', verbose_name='Номер в гостинице'),
        ),
        migrations.AddField(
            model_name='deluxeroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deluxe_room', to='part_room.room', verbose_name='Номер в гостинице'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
